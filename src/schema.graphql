# import Post, Offer from "./generated/prisma.graphql"
# import OfferWhereInput, OfferOrderByInput from "./generated/prisma.graphql"

type Query {
  feed: [Post!]!
  drafts: [Post!]!
  post(id: ID!): Post
  me: User
  offer(id: ID!): Offer
  offers(
    where: OfferWhereInput,
    orderBy: OfferOrderByInput,
    skip: Int,
    after: String,
    before: String,
    first: Int,
    last: Int
  ): [Offer]!
}

type RefreshTokenPayload {
  token: String!
  userId: String!
}

type Mutation {
  refreshToken: RefreshTokenPayload!
  signup(email: String!, password: String!, name: String!): AuthPayload!
  login(email: String!, password: String!): LoginResponse!
  createDraft(title: String!, text: String!): Post!
  publish(id: ID!): Post!
  deletePost(id: ID!): Post!
  createOffer(title: String!, text: String!): Offer!
  deleteOffer(id: ID!): Offer!
}

type Subscription {
  feedSubscription: PostSubscriptionPayload!
}

type AuthPayload {
  token: String!
  user: User!
}

type LoginResponse {
  payload: AuthPayload
  error: Error
}

type Error {
  field: String!
  msg: String!
}

type User {
  id: ID!
  email: String!
  name: String!
  posts: [Post!]!
}
